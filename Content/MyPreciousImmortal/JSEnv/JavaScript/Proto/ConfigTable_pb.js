// source: ConfigTable.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gamedef.AptitudeType', null, global);
goog.exportSymbol('proto.gamedef.AttackType', null, global);
goog.exportSymbol('proto.gamedef.Card', null, global);
goog.exportSymbol('proto.gamedef.CareerType', null, global);
goog.exportSymbol('proto.gamedef.NPC', null, global);
goog.exportSymbol('proto.gamedef.PatrolType', null, global);
goog.exportSymbol('proto.gamedef.Table', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamedef.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamedef.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamedef.Card.displayName = 'proto.gamedef.Card';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamedef.NPC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamedef.NPC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamedef.NPC.displayName = 'proto.gamedef.NPC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamedef.Table = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gamedef.Table.repeatedFields_, null);
};
goog.inherits(proto.gamedef.Table, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamedef.Table.displayName = 'proto.gamedef.Table';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamedef.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.gamedef.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamedef.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    level: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fullname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cvname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    introduction: jspb.Message.getFieldWithDefault(msg, 6, ""),
    career: jspb.Message.getFieldWithDefault(msg, 7, 0),
    careericon: jspb.Message.getFieldWithDefault(msg, 8, ""),
    aptitude: jspb.Message.getFieldWithDefault(msg, 9, 0),
    consumable: jspb.Message.getFieldWithDefault(msg, 10, 0),
    atk: jspb.Message.getFieldWithDefault(msg, 11, 0),
    atkspeed: jspb.Message.getFieldWithDefault(msg, 12, 0),
    def: jspb.Message.getFieldWithDefault(msg, 13, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 14, 0),
    anger: jspb.Message.getFieldWithDefault(msg, 15, 0),
    angermax: jspb.Message.getFieldWithDefault(msg, 16, 0),
    angerattack: jspb.Message.getFieldWithDefault(msg, 17, 0),
    angerbehited: jspb.Message.getFieldWithDefault(msg, 18, 0),
    angerdeath: jspb.Message.getFieldWithDefault(msg, 19, 0),
    skillnormal: jspb.Message.getFieldWithDefault(msg, 20, 0),
    skillspecial: jspb.Message.getFieldWithDefault(msg, 21, 0),
    skillpassivityone: jspb.Message.getFieldWithDefault(msg, 22, 0),
    skillpassivitytwo: jspb.Message.getFieldWithDefault(msg, 23, 0),
    icon: jspb.Message.getFieldWithDefault(msg, 24, ""),
    roletemplateid: jspb.Message.getFieldWithDefault(msg, 25, 0),
    paint: jspb.Message.getFieldWithDefault(msg, 26, ""),
    initquality: jspb.Message.getFieldWithDefault(msg, 27, ""),
    cardlink: jspb.Message.getFieldWithDefault(msg, 28, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamedef.Card}
 */
proto.gamedef.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamedef.Card;
  return proto.gamedef.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamedef.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamedef.Card}
 */
proto.gamedef.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCvname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntroduction(value);
      break;
    case 7:
      var value = /** @type {!proto.gamedef.CareerType} */ (reader.readEnum());
      msg.setCareer(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCareericon(value);
      break;
    case 9:
      var value = /** @type {!proto.gamedef.AptitudeType} */ (reader.readEnum());
      msg.setAptitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConsumable(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAtk(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAtkspeed(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDef(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAnger(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAngermax(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAngerattack(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAngerbehited(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAngerdeath(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillnormal(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillspecial(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillpassivityone(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkillpassivitytwo(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoletemplateid(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaint(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitquality(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardlink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamedef.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamedef.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamedef.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCvname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIntroduction();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCareer();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getCareericon();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAptitude();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getConsumable();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAtk();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getAtkspeed();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDef();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getAnger();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getAngermax();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getAngerattack();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getAngerbehited();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getAngerdeath();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getSkillnormal();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getSkillspecial();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getSkillpassivityone();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getSkillpassivitytwo();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getRoletemplateid();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getPaint();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getInitquality();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCardlink();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.gamedef.Card.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Level = 2;
 * @return {number}
 */
proto.gamedef.Card.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.gamedef.Card.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string FullName = 4;
 * @return {string}
 */
proto.gamedef.Card.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string CvName = 5;
 * @return {string}
 */
proto.gamedef.Card.prototype.getCvname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setCvname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Introduction = 6;
 * @return {string}
 */
proto.gamedef.Card.prototype.getIntroduction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setIntroduction = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional CareerType Career = 7;
 * @return {!proto.gamedef.CareerType}
 */
proto.gamedef.Card.prototype.getCareer = function() {
  return /** @type {!proto.gamedef.CareerType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.gamedef.CareerType} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setCareer = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string CareerIcon = 8;
 * @return {string}
 */
proto.gamedef.Card.prototype.getCareericon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setCareericon = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional AptitudeType Aptitude = 9;
 * @return {!proto.gamedef.AptitudeType}
 */
proto.gamedef.Card.prototype.getAptitude = function() {
  return /** @type {!proto.gamedef.AptitudeType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.gamedef.AptitudeType} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAptitude = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional int32 Consumable = 10;
 * @return {number}
 */
proto.gamedef.Card.prototype.getConsumable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setConsumable = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 Atk = 11;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAtk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAtk = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 AtkSpeed = 12;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAtkspeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAtkspeed = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 Def = 13;
 * @return {number}
 */
proto.gamedef.Card.prototype.getDef = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setDef = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 HP = 14;
 * @return {number}
 */
proto.gamedef.Card.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 Anger = 15;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAnger = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAnger = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 AngerMax = 16;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAngermax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAngermax = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 AngerAttack = 17;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAngerattack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAngerattack = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 AngerBeHited = 18;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAngerbehited = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAngerbehited = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 AngerDeath = 19;
 * @return {number}
 */
proto.gamedef.Card.prototype.getAngerdeath = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setAngerdeath = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 SkillNormal = 20;
 * @return {number}
 */
proto.gamedef.Card.prototype.getSkillnormal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setSkillnormal = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 SkillSpecial = 21;
 * @return {number}
 */
proto.gamedef.Card.prototype.getSkillspecial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setSkillspecial = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 SkillPassivityOne = 22;
 * @return {number}
 */
proto.gamedef.Card.prototype.getSkillpassivityone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setSkillpassivityone = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 SkillPassivityTwo = 23;
 * @return {number}
 */
proto.gamedef.Card.prototype.getSkillpassivitytwo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setSkillpassivitytwo = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional string Icon = 24;
 * @return {string}
 */
proto.gamedef.Card.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional int32 RoleTemplateID = 25;
 * @return {number}
 */
proto.gamedef.Card.prototype.getRoletemplateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setRoletemplateid = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional string Paint = 26;
 * @return {string}
 */
proto.gamedef.Card.prototype.getPaint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setPaint = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string InitQuality = 27;
 * @return {string}
 */
proto.gamedef.Card.prototype.getInitquality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setInitquality = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string CardLink = 28;
 * @return {string}
 */
proto.gamedef.Card.prototype.getCardlink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.Card} returns this
 */
proto.gamedef.Card.prototype.setCardlink = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamedef.NPC.prototype.toObject = function(opt_includeInstance) {
  return proto.gamedef.NPC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamedef.NPC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.NPC.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    level: jspb.Message.getFieldWithDefault(msg, 3, 0),
    headid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    talklist: jspb.Message.getFieldWithDefault(msg, 5, ""),
    popshow: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pb_function: jspb.Message.getFieldWithDefault(msg, 7, ""),
    deletype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    atktype: jspb.Message.getFieldWithDefault(msg, 9, 0),
    dungeon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    interactrange: jspb.Message.getFieldWithDefault(msg, 11, 0),
    guard: jspb.Message.getFieldWithDefault(msg, 12, 0),
    patrol: jspb.Message.getFieldWithDefault(msg, 13, 0),
    patrolrange: jspb.Message.getFieldWithDefault(msg, 14, 0),
    reborn: jspb.Message.getFieldWithDefault(msg, 15, ""),
    borntime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    initfavor: jspb.Message.getFieldWithDefault(msg, 17, 0),
    unionnpc: jspb.Message.getFieldWithDefault(msg, 18, 0),
    unionethnicid: jspb.Message.getFieldWithDefault(msg, 19, 0),
    fightfavorchg: jspb.Message.getFieldWithDefault(msg, 20, 0),
    shop: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamedef.NPC}
 */
proto.gamedef.NPC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamedef.NPC;
  return proto.gamedef.NPC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamedef.NPC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamedef.NPC}
 */
proto.gamedef.NPC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTalklist(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPopshow(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeletype(value);
      break;
    case 9:
      var value = /** @type {!proto.gamedef.AttackType} */ (reader.readEnum());
      msg.setAtktype(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDungeon(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInteractrange(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGuard(value);
      break;
    case 13:
      var value = /** @type {!proto.gamedef.PatrolType} */ (reader.readEnum());
      msg.setPatrol(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPatrolrange(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setReborn(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBorntime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInitfavor(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnionnpc(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnionethnicid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFightfavorchg(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setShop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamedef.NPC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamedef.NPC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamedef.NPC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.NPC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHeadid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTalklist();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPopshow();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDeletype();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getAtktype();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getDungeon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInteractrange();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getGuard();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPatrol();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getPatrolrange();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getReborn();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getBorntime();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getInitfavor();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getUnionnpc();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getUnionethnicid();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getFightfavorchg();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getShop();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 Level = 3;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string HeadID = 4;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getHeadid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setHeadid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string TalkList = 5;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getTalklist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setTalklist = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 Popshow = 6;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getPopshow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setPopshow = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string Function = 7;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 DeleType = 8;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getDeletype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setDeletype = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional AttackType AtkType = 9;
 * @return {!proto.gamedef.AttackType}
 */
proto.gamedef.NPC.prototype.getAtktype = function() {
  return /** @type {!proto.gamedef.AttackType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.gamedef.AttackType} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setAtktype = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional string Dungeon = 10;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getDungeon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setDungeon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 InteractRange = 11;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getInteractrange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setInteractrange = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 Guard = 12;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getGuard = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setGuard = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional PatrolType Patrol = 13;
 * @return {!proto.gamedef.PatrolType}
 */
proto.gamedef.NPC.prototype.getPatrol = function() {
  return /** @type {!proto.gamedef.PatrolType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.gamedef.PatrolType} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setPatrol = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional int32 PatrolRange = 14;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getPatrolrange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setPatrolrange = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string Reborn = 15;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getReborn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setReborn = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 BornTime = 16;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getBorntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setBorntime = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 InitFavor = 17;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getInitfavor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setInitfavor = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 UnionNpc = 18;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getUnionnpc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setUnionnpc = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 UnionEthnicid = 19;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getUnionethnicid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setUnionethnicid = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 FightFavorChg = 20;
 * @return {number}
 */
proto.gamedef.NPC.prototype.getFightfavorchg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setFightfavorchg = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string Shop = 21;
 * @return {string}
 */
proto.gamedef.NPC.prototype.getShop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamedef.NPC} returns this
 */
proto.gamedef.NPC.prototype.setShop = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gamedef.Table.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamedef.Table.prototype.toObject = function(opt_includeInstance) {
  return proto.gamedef.Table.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamedef.Table} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.Table.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardList: jspb.Message.toObjectList(msg.getCardList(),
    proto.gamedef.Card.toObject, includeInstance),
    npcList: jspb.Message.toObjectList(msg.getNpcList(),
    proto.gamedef.NPC.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamedef.Table}
 */
proto.gamedef.Table.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamedef.Table;
  return proto.gamedef.Table.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamedef.Table} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamedef.Table}
 */
proto.gamedef.Table.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gamedef.Card;
      reader.readMessage(value,proto.gamedef.Card.deserializeBinaryFromReader);
      msg.addCard(value);
      break;
    case 2:
      var value = new proto.gamedef.NPC;
      reader.readMessage(value,proto.gamedef.NPC.deserializeBinaryFromReader);
      msg.addNpc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamedef.Table.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamedef.Table.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamedef.Table} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamedef.Table.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gamedef.Card.serializeBinaryToWriter
    );
  }
  f = message.getNpcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gamedef.NPC.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Card Card = 1;
 * @return {!Array<!proto.gamedef.Card>}
 */
proto.gamedef.Table.prototype.getCardList = function() {
  return /** @type{!Array<!proto.gamedef.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gamedef.Card, 1));
};


/**
 * @param {!Array<!proto.gamedef.Card>} value
 * @return {!proto.gamedef.Table} returns this
*/
proto.gamedef.Table.prototype.setCardList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gamedef.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gamedef.Card}
 */
proto.gamedef.Table.prototype.addCard = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gamedef.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gamedef.Table} returns this
 */
proto.gamedef.Table.prototype.clearCardList = function() {
  return this.setCardList([]);
};


/**
 * repeated NPC NPC = 2;
 * @return {!Array<!proto.gamedef.NPC>}
 */
proto.gamedef.Table.prototype.getNpcList = function() {
  return /** @type{!Array<!proto.gamedef.NPC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gamedef.NPC, 2));
};


/**
 * @param {!Array<!proto.gamedef.NPC>} value
 * @return {!proto.gamedef.Table} returns this
*/
proto.gamedef.Table.prototype.setNpcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gamedef.NPC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gamedef.NPC}
 */
proto.gamedef.Table.prototype.addNpc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gamedef.NPC, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gamedef.Table} returns this
 */
proto.gamedef.Table.prototype.clearNpcList = function() {
  return this.setNpcList([]);
};


/**
 * @enum {number}
 */
proto.gamedef.CareerType = {
  ZHIYE_NONE: 0,
  FUMO: 1,
  TIANWANG: 2,
  SHENJIANG: 3,
  YINGMING: 4,
  XUANSHU: 5
};

/**
 * @enum {number}
 */
proto.gamedef.AptitudeType = {
  ZIZHI_NONE: 0,
  DIXIAN: 1,
  TIANSHI: 2,
  LINGGUAN: 3,
  XIANJUN: 4,
  DIJUN: 5,
  TIANZUN: 6
};

/**
 * @enum {number}
 */
proto.gamedef.AttackType = {
  GREEN: 0,
  YELLOW: 1,
  RED: 2
};

/**
 * @enum {number}
 */
proto.gamedef.PatrolType = {
  ORIGIN: 0,
  PATROL: 1,
  RANDOM: 2,
  PINGPONG: 3
};

goog.object.extend(exports, proto.gamedef);
