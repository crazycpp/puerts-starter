// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_id.proto

#include "proto_id.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Proto {
}  // namespace Proto
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_proto_5fid_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_5fid_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_5fid_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_5fid_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_proto_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016proto_id.proto\022\005Proto*z\n\tMsgTypeId\022\014\n\010"
  "MI_Logic\020\000\022\013\n\007MI_Card\020\001\022\r\n\tMI_Battle\020\002\022\013"
  "\n\007MI_Item\020\003\022\013\n\007MI_Chat\020\004\022\t\n\005MI_GM\020\005\022\014\n\010M"
  "I_Gacha\020\006\022\020\n\014MI_Character\020\007*\260\037\n\005MsgId\022\016\n"
  "\nMsgId_None\020\000\022\025\n\021MI_NetworkConnect\020\001\022\027\n\023"
  "MI_NetworkConnected\020\002\022\024\n\020MI_NetworkListe"
  "n\020\003\022\027\n\023MI_NetworkListenKey\020\004\022\030\n\024MI_Netwo"
  "rkDisconnect\020\n\022\032\n\026MI_NetworkDisconnectEx"
  "\020\013\022\037\n\033MI_NetworkRequestDisconnect\020\024\022\026\n\022M"
  "I_RemoveComponent\0202\022\026\n\022MI_CreateComponen"
  "t\0203\022\023\n\017MI_CreateSystem\0204\022\013\n\007MI_Ping\020e\022\022\n"
  "\016MI_AppRegister\020f\022\022\n\016MI_AppInfoSync\020g\022\026\n"
  "\022MI_AppInfoListSync\020h\022\021\n\rMI_SpaceReady\020x"
  "\022\026\n\021DB_LoadAllAccount\020\304\001\022\030\n\023DB_LoadAllAc"
  "countRs\020\305\001\022\025\n\020DB_LoadAllPlayer\020\306\001\022\027\n\022DB_"
  "LoadAllPlayerRs\020\307\001\022\022\n\rDB_LoadPlayer\020\310\001\022\024"
  "\n\017DB_LoadPlayerRs\020\311\001\022\020\n\013DB_SaveToDB\020\312\001\022\022"
  "\n\rDB_SaveToDBRs\020\313\001\022\023\n\016DB_QueryPlayer\020\314\001\022"
  "\025\n\020DB_QueryPlayerRs\020\315\001\022\024\n\017DB_CreatePlaye"
  "r\020\316\001\022\026\n\021DB_CreatePlayerRs\020\317\001\022\022\n\rDB_SaveP"
  "layer\020\320\001\022\024\n\017DB_SavePlayerRs\020\321\001\022\025\n\020C2L_Ac"
  "countCheck\020\350\007\022\027\n\022C2L_AccountCheckRs\020\351\007\022\031"
  "\n\024L2DB_QueryPlayerList\020\362\007\022\033\n\026L2DB_QueryP"
  "layerListRs\020\363\007\022\023\n\016L2C_PlayerList\020\364\007\022\026\n\021L"
  "2DB_CreatePlayer\020\370\007\022\030\n\023L2DB_CreatePlayer"
  "Rs\020\371\007\022\025\n\020C2L_SelectPlayer\020\372\007\022\027\n\022C2L_Sele"
  "ctPlayerRs\020\373\007\022\022\n\rL2C_GameToken\020\200\010\022\024\n\017C2S"
  "_PlayerLogin\020\206\010\022\026\n\021S2C_PlayerLoginRs\020\207\010\022"
  "\025\n\020C2S_PlayerCreate\020\210\010\022\027\n\022S2C_PlayerCrea"
  "teRs\020\211\010\022\025\n\020C2G_LoginByToken\020\314\010\022\027\n\022C2G_Lo"
  "ginByTokenRs\020\315\010\022\025\n\020G2DB_QueryPlayer\020\320\010\022\027"
  "\n\022G2DB_QueryPlayerRs\020\321\010\022\023\n\016G2C_SyncPlaye"
  "r\020\322\010\022\025\n\020G2M_RequestWorld\020\324\010\022\024\n\017G2S_Creat"
  "eWorld\020\325\010\022\020\n\013MI_Teleport\020\326\010\022\025\n\020MI_Telepo"
  "rtAfter\020\327\010\022\023\n\016G2S_SyncPlayer\020\330\010\022\032\n\025G2S_R"
  "equestSyncPlayer\020\331\010\022\024\n\017G2DB_SavePlayer\020\332"
  "\010\022\025\n\020G2S_RemovePlayer\020\333\010\022\023\n\016C2S_EnterWor"
  "ld\020\334\010\022\031\n\024G2M_QueryDungeonBySn\020\335\010\022\033\n\026G2M_"
  "QueryDungeonBySnRs\020\336\010\022\025\n\020S2G_DestoryWorl"
  "d\020\337\010\022\022\n\rS2C_SyncWorld\020\340\010\022\022\n\rC2S_EnterHom"
  "e\020\341\010\022\027\n\022C2S_QueryWorldData\020\342\010\022\031\n\024S2C_Que"
  "ryWorldDataRs\020\343\010\022\024\n\017C2S_WorldAction\020\346\010\022\024"
  "\n\017S2C_WorldAction\020\347\010\022\030\n\023S2C_SyncWorldAct"
  "ion\020\350\010\022\034\n\027G2DB_QueryAllPlayerName\020\364\010\022\036\n\031"
  "G2DB_QueryAllPlayerNameRs\020\365\010\022\017\n\nC2S_AddE"
  "xp\020\262\t\022\021\n\014S2C_AddExpRs\020\263\t\022\020\n\013C2S_Dungeon\020"
  "\264\t\022\022\n\rS2C_DungeonRs\020\265\t\022\r\n\010C2S_Chat\020\266\t\022\017\n"
  "\nS2C_ChatRs\020\267\t\022\026\n\021C2S_GetChatRecord\020\270\t\022\030"
  "\n\023S2C_GetChatRecordRs\020\271\t\022\026\n\021C2S_GetFrien"
  "dList\020\272\t\022\030\n\023S2C_GetFriendListRs\020\273\t\022\022\n\rC2"
  "S_AddFriend\020\274\t\022\024\n\017S2C_AddFriendRs\020\275\t\022\022\n\r"
  "C2S_DelFriend\020\276\t\022\024\n\017S2C_DelFriendRs\020\277\t\022\025"
  "\n\020C2S_RefresFriend\020\300\t\022\027\n\022S2C_RefresFrien"
  "dRs\020\301\t\022\021\n\014S2C_SyncChat\020\322\t\022\026\n\021C2S_GetTarg"
  "etInfo\020\323\t\022\030\n\023S2C_GetTargetInfoRs\020\324\t\022\r\n\010C"
  "2S_Mute\020\325\t\022\017\n\nS2C_MuteRs\020\326\t\022\014\n\007MI_Mute\020\327"
  "\t\022\022\n\rC2S_JoinGuild\020\330\t\022\024\n\017S2C_JoinGuildRs"
  "\020\331\t\022\022\n\rC2S_QuitGuild\020\332\t\022\024\n\017S2C_QuitGuild"
  "Rs\020\333\t\022\021\n\014C2S_JoinTeam\020\334\t\022\023\n\016S2C_JoinTeam"
  "Rs\020\335\t\022\021\n\014C2S_QuitTeam\020\336\t\022\023\n\016S2C_QuitTeam"
  "Rs\020\337\t\022\020\n\013MI_ChatSync\020\342\t\022\025\n\020MI_ChatBroadc"
  "ast\020\343\t\022\025\n\020MI_GetChatRecord\020\344\t\022\027\n\022MI_GetC"
  "hatRecordRs\020\345\t\022\026\n\021MI_BroadcastLogin\020\346\t\022\025"
  "\n\020MI_GetTargetInfo\020\347\t\022\027\n\022MI_GetTargetInf"
  "oRs\020\350\t\022\032\n\025C2S_RequestChangeTeam\020\224\n\022\034\n\027S2"
  "C_ReseponseChangeTeam\020\225\n\022\027\n\022C2S_RequestA"
  "ddItem\020\370\n\022\027\n\022S2C_PushItemChange\020\371\n\022\027\n\022C2"
  "S_RequestUseItem\020\372\n\022\030\n\023S2C_ResponseUseIt"
  "em\020\373\n\022\027\n\022C2S_RequestSortBag\020\374\n\022\030\n\023S2C_Re"
  "sponseSortBag\020\375\n\022\030\n\023C2S_RequestSellItem\020"
  "\376\n\022\031\n\024S2C_ResponseSellItem\020\377\n\022\031\n\024C2S_Req"
  "uestGachaPull\020\200\013\022\032\n\025S2C_ResponseGachaPul"
  "l\020\201\013\022\023\n\016S2C_EnterWorld\020\335\013\022\023\n\016S2G_SyncPla"
  "yer\020\336\013\022\023\n\016S2C_RoleAppear\020\337\013\022\026\n\021S2C_RoleD"
  "isAppear\020\340\013\022\027\n\022C2S_MoveByRotation\020\341\013\022\027\n\022"
  "S2C_MoveByRotation\020\342\013\022\033\n\026S2C_SyncPlayerP"
  "roperty\020\343\013\022\024\n\017S2C_CardLevelUp\020\300\014\022\021\n\014S2C_"
  "CardStar\020\301\014\022\022\n\rS2C_CardQltUp\020\302\014\022\022\n\rS2C_C"
  "ardInten\020\303\014\022\026\n\021S2C_CardSkillLvUp\020\304\014\022\024\n\017C"
  "2S_CardLevelUp\020\324\014\022\021\n\014C2S_CardStar\020\325\014\022\022\n\r"
  "C2S_CardQltUp\020\326\014\022\026\n\021C2S_CardSkillLvUp\020\330\014"
  "\022\025\n\020C2S_BattleCreate\020\245\r\022\023\n\016C2S_BattleJoi"
  "n\020\246\r\022\023\n\016C2S_BattleView\020\247\r\022\031\n\024C2S_BattleA"
  "ctionList\020\250\r\022\024\n\017C2S_BattleBegin\020\251\r\022\022\n\rC2"
  "S_BattleEnd\020\252\r\022\021\n\014S2C_BattleRs\020\270\r\022\027\n\022S2C"
  "_BattleSyncTeam\020\271\r\022\031\n\024S2C_BattleActionLi"
  "st\020\272\r\022\024\n\017S2C_BattleBegin\020\273\r\022\022\n\rS2C_Battl"
  "eEnd\020\274\r\022\031\n\024C2S_ReqeustSkillLvUp\020\211\016\022\032\n\025S2"
  "C_ResponseSkillLvUp\020\212\016\022\035\n\030C2S_ReqeustEqu"
  "ipmentLvUp\020\213\016\022\036\n\031S2C_ResponseEquipmentLv"
  "Up\020\214\016\022\034\n\027MI_BroadcastCreateWorld\020\321\017\022!\n\034M"
  "I_BroadcastCreateWorldProxy\020\322\017\022\037\n\032MI_Req"
  "uestCreateWorldProxy\020\323\017\022\031\n\024MI_WorldSyncT"
  "oGather\020\271\027\022\036\n\031MI_WorldProxySyncToGather\020"
  "\272\027\022\026\n\021MI_RobotSyncState\020\211\'\022\023\n\016MI_RobotCr"
  "eate\020\212\'\022\021\n\014MI_HttpBegin\020\220N\022\031\n\024MI_HttpInn"
  "erResponse\020\221N\022\026\n\021MI_HttpRequestBad\020\222N\022\030\n"
  "\023MI_HttpRequestLogin\020\223N\022\026\n\021MI_HttpReques"
  "tFix\020\224N\022\017\n\nMI_HttpEnd\020\203R\022\030\n\023MI_HttpOuter"
  "Request\020\204R\022\031\n\024MI_HttpOuterResponse\020\205R\022\022\n"
  "\014MI_CmdThread\020\241\234\001\022\017\n\tMI_CmdApp\020\242\234\001\022\026\n\020MI"
  "_CmdWorldProxy\020\243\234\001\022\021\n\013MI_CmdWorld\020\244\234\001\022\022\n"
  "\014MI_CmdCreate\020\245\234\001\022\026\n\020MI_CmdEfficiency\020\246\234"
  "\001\022\023\n\rMI_Efficiency\020\247\234\001\022\026\n\020MI_CmdSyncPlay"
  "er\020\250\234\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_5fid_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_5fid_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_5fid_2eproto_once;
static bool descriptor_table_proto_5fid_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fid_2eproto = {
  &descriptor_table_proto_5fid_2eproto_initialized, descriptor_table_protodef_proto_5fid_2eproto, "proto_id.proto", 4174,
  &descriptor_table_proto_5fid_2eproto_once, descriptor_table_proto_5fid_2eproto_sccs, descriptor_table_proto_5fid_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_proto_5fid_2eproto::offsets,
  file_level_metadata_proto_5fid_2eproto, 0, file_level_enum_descriptors_proto_5fid_2eproto, file_level_service_descriptors_proto_5fid_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_5fid_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_5fid_2eproto), true);
namespace Proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgTypeId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fid_2eproto);
  return file_level_enum_descriptors_proto_5fid_2eproto[0];
}
bool MsgTypeId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fid_2eproto);
  return file_level_enum_descriptors_proto_5fid_2eproto[1];
}
bool MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
    case 20:
    case 50:
    case 51:
    case 52:
    case 101:
    case 102:
    case 103:
    case 104:
    case 120:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 1000:
    case 1001:
    case 1010:
    case 1011:
    case 1012:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1024:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1100:
    case 1101:
    case 1104:
    case 1105:
    case 1106:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1126:
    case 1127:
    case 1128:
    case 1140:
    case 1141:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1207:
    case 1208:
    case 1209:
    case 1210:
    case 1211:
    case 1212:
    case 1213:
    case 1214:
    case 1215:
    case 1216:
    case 1217:
    case 1234:
    case 1235:
    case 1236:
    case 1237:
    case 1238:
    case 1239:
    case 1240:
    case 1241:
    case 1242:
    case 1243:
    case 1244:
    case 1245:
    case 1246:
    case 1247:
    case 1250:
    case 1251:
    case 1252:
    case 1253:
    case 1254:
    case 1255:
    case 1256:
    case 1300:
    case 1301:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1405:
    case 1406:
    case 1407:
    case 1408:
    case 1409:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1600:
    case 1601:
    case 1602:
    case 1603:
    case 1604:
    case 1620:
    case 1621:
    case 1622:
    case 1624:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 1720:
    case 1721:
    case 1722:
    case 1723:
    case 1724:
    case 1801:
    case 1802:
    case 1803:
    case 1804:
    case 2001:
    case 2002:
    case 2003:
    case 3001:
    case 3002:
    case 5001:
    case 5002:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10499:
    case 10500:
    case 10501:
    case 20001:
    case 20002:
    case 20003:
    case 20004:
    case 20005:
    case 20006:
    case 20007:
    case 20008:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
